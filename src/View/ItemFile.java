package View;

import Control.Control;
import Model.Item.Item;
import Model.PriceReduction.Pricereduction;
import Model.Supplier.Supplier;
import java.awt.HeadlessException;
import java.text.ParseException;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Cristian
 */
public class ItemFile extends javax.swing.JFrame {
    private final Control control;
    private String userName = null;
    private Item item = null;
    private static Pricereduction pricereduction = null;
    
    public ItemFile(Item item, Control control, String userName) {
        this.control = control;
        initComponents();
        this.item = item;
        this.userName = userName;
        fillItemInformation();
        closeInformationUnchangable();
    }

    public ItemFile(Control control, String userName) throws HeadlessException {
        this.control = control;
        this.userName = userName;
        initComponents();
        closeInformation();
    }
    
    private void closeInformation(){
        originalPrice.setVisible(false);
        offertInfo.setVisible(false);
        creatorInfo.setVisible(false);
        removeButton.setVisible(false);
    }
    
    private void closeInformationUnchangable(){
        dateField.setEditable(false);
        if(userName == null){
            saveButton.setVisible(false);
            removeButton.setVisible(false);
            discardButton.setVisible(false);
            discountButton.setVisible(false);
        }
        else
            if(!control.getUserlogin(userName).getType().equals("Admin")) 
                removeButton.setVisible(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        discardButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        dateField = new javax.swing.JTextField();
        activeCheck = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        deactiveCheck = new javax.swing.JCheckBox();
        offertField = new javax.swing.JTextField();
        offertInfo = new javax.swing.JLabel();
        creatorInfo = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        originalPrice = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        codeField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        discountButton = new javax.swing.JButton();
        supplierCombo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(700, 0));

        discardButton.setText("Discard changes");
        discardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardButtonActionPerformed(evt);
            }
        });

        removeButton.setText("Remove Item");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Description");

        jLabel6.setText("Supplier");

        jLabel2.setText("Creation Date");

        jLabel7.setText("State");

        dateField.setText(Calendar.YEAR+"-"+Calendar.MONTH+"-"+Calendar.DAY_OF_MONTH);

        activeCheck.setForeground(new java.awt.Color(0, 204, 0));
        activeCheck.setText("Active");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/chair.png"))); // NOI18N
        jButton1.setIcon(new ImageIcon("img/chair.png"));

        deactiveCheck.setForeground(new java.awt.Color(204, 0, 0));
        deactiveCheck.setText("Discontinued");

        offertInfo.setText("Offert Avalible until");

        creatorInfo.setText("Product added by");

        saveButton.setText("Save changes");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        originalPrice.setText("jLabel3");

        jLabel3.setText("Code");

        codeField.setEnabled(false);

        jLabel4.setText("â‚¬");

        discountButton.setText("Add Discount");
        discountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountButtonActionPerformed(evt);
            }
        });

        supplierCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No supplier" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deactiveCheck)
                    .addComponent(activeCheck))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(31, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(offertField, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(originalPrice)
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(discountButton))
                            .addComponent(offertInfo))
                        .addGap(14, 14, 14))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(saveButton)
                        .addGap(18, 18, 18)
                        .addComponent(discardButton)
                        .addGap(12, 12, 12)
                        .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(creatorInfo))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(nameField, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                                .addComponent(dateField)
                                .addComponent(codeField))
                            .addComponent(supplierCombo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(codeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(supplierCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(activeCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deactiveCheck)
                        .addGap(56, 56, 56))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(36, 36, 36))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(offertInfo)
                                    .addComponent(originalPrice)
                                    .addComponent(offertField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(discountButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(removeButton)
                            .addComponent(discardButton)
                            .addComponent(saveButton)
                            .addComponent(creatorInfo))
                        .addContainerGap())))
        );

        List<Supplier> suppliers = control.readSuppliers();
        suppliers.forEach((supplier) -> {
            supplierCombo.addItem(supplier.getName());
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void discardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardButtonActionPerformed
        fillItemInformation();
    }//GEN-LAST:event_discardButtonActionPerformed
    
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try {
            if(item != null) checkStateChanges(control.updateItem(updateInformation()));
            else checkStateChanges(control.createItem(getInformation()));
        } catch (ParseException ex) {
            Logger.getLogger(ItemFile.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void discountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountButtonActionPerformed
        if(item == null) new DiscountPane(control).setVisible(true);
        else{
            if(item.getPricereduction() == null) new DiscountPane(control).setVisible(true);
            else JOptionPane.showMessageDialog(null, "You can't apply an offer to an item that already has one");
        }
    }//GEN-LAST:event_discountButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        if(item == null){
            if(askConfirmation("Are you sure of deleting the new item?") == JOptionPane.OK_OPTION)
                this.dispose();
        }
        else 
            if(askConfirmation("Are you sure of deleting the current item?") == JOptionPane.OK_OPTION)
                removeItem();    
    }//GEN-LAST:event_removeButtonActionPerformed

    private int askConfirmation(String message){
        return JOptionPane.showConfirmDialog(null, message, "Warning!", JOptionPane.YES_NO_OPTION);
    }
    
    private void removeItem(){
        if(control.deleteItem(item)) {
            JOptionPane.showMessageDialog(null, "Item succesfully removed");
            this.dispose();
            ViewImpl.prepareTable();
        }
        else JOptionPane.showMessageDialog(null, "Failed to remove the Item");
    }
    
    public static void setDiscount(Pricereduction pricereduction){
        ItemFile.pricereduction = pricereduction;
    }
    
    private void checkStateChanges(boolean changeState){
        if(changeState) {
            JOptionPane.showMessageDialog(null, "Changes applied succesfully");
            this.dispose();
            ViewImpl.prepareTable();
        }
        else{
            JOptionPane.showMessageDialog(null, "Couldn't apply changes");
        }
    }
    
    private Item updateInformation(){
        item.setDescription(nameField.getText());
        item.setPrice(Double.parseDouble(offertField.getText()));
        if(item.getPricereduction() == null) item.setPricereduction(pricereduction);
        if(activeCheck.isSelected()) item.setStateitem("Active");
        else item.setStateitem("Discontinued");
        return item;
    }
    
    private Item getInformation() throws ParseException{
        Item newItem = new Item();
        newItem.setDescription(nameField.getText());
        newItem.setCreationdate(new Date());
        newItem.setPrice(Double.parseDouble(offertField.getText()));
        if(activeCheck.isSelected()) newItem.setStateitem("Active");
        else newItem.setStateitem("Discontinued");
        newItem.setSupplier(control.getSupplier(supplierCombo.getSelectedItem()+""));
        newItem.setUserlogin(control.getUserlogin(userName));
        newItem.setPricereduction(pricereduction);
        return newItem;
    }
    
     private void fillItemInformation() {
         codeField.setText(item.getCode()+"");
        nameField.setText(item.getDescription());
        dateField.setText(item.getCreationdate()+"");
        if(item.getSupplier() != null)  supplierCombo.setSelectedItem(item.getSupplier().getName());
        else supplierCombo.setSelectedIndex(0);
        if(getStateItem(item.getStateitem())) activeCheck.setSelected(true);
        else deactiveCheck.setSelected(false);
        creatorInfo.setText("Product added by "+item.getUserlogin().getUsername());
        prepareInformationPrices(item.getPrice(), item.getPricereduction());
    }

     private void prepareInformationPrices(double price, Pricereduction priceReduction){
        Date date = new Date();
        
        if(priceReduction != null){
            if(date.before(priceReduction.getEnddate()) && date.after(priceReduction.getStartdate())){
            offertInfo.setText("Offert Avalible until "+priceReduction.getEnddate().getMonth()+"/"
                    +priceReduction.getEnddate().getDay());
            offertField.setText((price - priceReduction.getReducedprice())+"");
            originalPrice.setText("<html><body><span style='text-decoration: line-through;'>"+price+"</span></body></html>");
        }
            else{
                offertInfo.setVisible(false);
                offertField.setText(price+"");
                originalPrice.setVisible(false);
            }
        }else{
                offertInfo.setVisible(false);
                offertField.setText(price+"");
                originalPrice.setVisible(false);
            }   
     }
     
    private boolean getStateItem(String state){
        return state.equals("Active");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox activeCheck;
    private javax.swing.JTextField codeField;
    private javax.swing.JLabel creatorInfo;
    private javax.swing.JTextField dateField;
    private javax.swing.JCheckBox deactiveCheck;
    private javax.swing.JButton discardButton;
    private javax.swing.JButton discountButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField offertField;
    private javax.swing.JLabel offertInfo;
    private javax.swing.JLabel originalPrice;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JComboBox<String> supplierCombo;
    // End of variables declaration//GEN-END:variables

}
