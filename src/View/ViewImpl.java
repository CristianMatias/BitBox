package View;

import Control.Control;
import Model.Item.Item;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import Model.PriceReduction.Pricereduction;
import javax.swing.JOptionPane;
/**
 *
 * @author Cristian
 */
public class ViewImpl extends javax.swing.JFrame implements View{
    private static Control control;
    private String userName = null;
    private static List<Item> itemList;
    
    /**
     * Creates new form ViewImpl
     * @param control
     */
    public ViewImpl(Control control) {
        ViewImpl.control = control;
        initComponents();
        prepareTable();
        createButton.setVisible(false);
    }
    
    public ViewImpl(Control control,String userName){
        initComponents();
        ViewImpl.control = control;
        this.userName = userName;
        loginButton.setText(userName);
        prepareTable();
    }
    
    protected static void prepareTable(){
        itemList = control.readItems();
        prepareTableItems((DefaultTableModel) itemTable.getModel());
        
    }
    
    private static void deleteRows(int rows, DefaultTableModel model){
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }
    
    private static void prepareTableItems(DefaultTableModel model){
        deleteRows(model.getRowCount(), model);
        itemList.forEach((item) -> {
            Object[] row = new Object[6];
            
            row[0] = item.getCode();
            row[1] = item.getDescription();
            row[2] = preparePrices(item.getPrice(), item.getPricereduction());
            row[3] = item.getCreationdate();
            row[4] = item.getStateitem();
            row[5] = item.getUserlogin().getUsername();
            model.addRow(row);
        });
        itemTable.setModel(model);
    }
    
    protected static double preparePrices(double price, Pricereduction priceReduction){
        Date date = new Date(); 
        if(priceReduction != null){
            if(date.before(priceReduction.getEnddate()) && date.after(priceReduction.getStartdate()))
                return price - priceReduction.getReducedprice();
            else return price;
        }
        else return price;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        loginButton = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        exitButton = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        showItem = new javax.swing.JMenuItem();
        createButton = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        loginButton.setText("Log In");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descripción", "Precio", "Fecha", "Estado", "Creado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemTable.setColumnSelectionAllowed(true);
        itemTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(itemTable);
        itemTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (itemTable.getColumnModel().getColumnCount() > 0) {
            itemTable.getColumnModel().getColumn(1).setResizable(false);
        }

        jTabbedPane1.addTab("Tabla de Precios", jScrollPane1);

        exitButton.setText("Archivo");

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        exitButton.add(jMenuItem1);

        jMenuBar1.add(exitButton);

        jMenu3.setText("Item");

        showItem.setText("Show Item");
        showItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showItemActionPerformed(evt);
            }
        });
        jMenu3.add(showItem);

        createButton.setText("Create Item");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });
        jMenu3.add(createButton);

        jMenuBar1.add(jMenu3);

        jMenu2.setText("Ayuda");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loginButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        new LoginInterface(control).setVisible(true);
        this.setEnabled(false);
        this.setVisible(false);
    }//GEN-LAST:event_loginButtonActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    
    private void showItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showItemActionPerformed

        String[] items = new String[itemList.size()];
        for (int i = 0; i < items.length; i++) {
            items[i] = itemList.get(i).getDescription();
        }
        
        String code = (String) JOptionPane.showInputDialog(null, "Selecct the item code",
                    "Item Information", JOptionPane.DEFAULT_OPTION, null, items, items[0]);
    
        itemList.forEach((item) ->{
            if(code.equals(item.getDescription())) {
                new ItemFile(item, control, userName).setVisible(true);
            }
        });
    }//GEN-LAST:event_showItemActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        new ItemFile(control, userName).setVisible(true);
    }//GEN-LAST:event_createButtonActionPerformed
       
    @Override
    public void start() {
        this.setVisible(true);
    }
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenuItem createButton;
    private javax.swing.JMenu exitButton;
    private static javax.swing.JTable itemTable;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton loginButton;
    private javax.swing.JMenuItem showItem;
    // End of variables declaration//GEN-END:variables
}
